data.a  <- data.frame(a,b)
data.b  <- data.frame(a,b)
require(RCurl)
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Au9zi20yTsCSdGZFRzhyREVOOEhLSkM2YVAxRW5kUHc&single=true&gid=0&output=csv")
dados  <- read.csv(textConnection(meuCsV))
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edFpMalBzelZxa1dxZFByR29FVUFjM3c&output=csv")
dados  <- read.csv(textConnection(meuCsV))
dados  <- read.csv(textConnection(meuCsv))
names(dados)
dados  <- read.csv(textConnection(meuCsv), header=T, fill="NA")
dados  <- read.csv(textConnection(meuCsv), header=T, fill=TRUE)
dados[1:2,0]
dados[1,1:2]
dados  <- read.table(textConnection(meuCsv), header=T)
data  <- read.table("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edFpMalBzelZxa1dxZFByR29FVUFjM3c&output=csv", sep=",", header = TRUE)
dados  <- read.csv(textConnection(meuCsv), header=T)
?read.csv
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE)
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("V", seq_len(ncol)))
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste("V", seq_len(ncol)))
dados  <- read.csv(textConnection(meuCsv), header=T, col.names = paste0("V", seq_len(ncol)))
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE)
ncol  <- max(count.fields(dados))
ncol  <- max(count.fields(textConnection(meuCsv)))
ncol
ncol  <- max(count.fields(textConnection(meuCsv), sep =","))
ncol
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("V", seq_len(ncol)))
names(dados[,1:5])
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)))
?paste
a  <- paste(1,2)
a
a  <- paste0(1,2)
a
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)))
names(dados[,1:5])
levels(dados)
levels(dados$1)
levels(dados$v5)
levels(dados$v6)
head(dados[,1:5])
head(dados[,1:10])
View(dados)
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA" )
head(dados[,1:10])
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = " " )
head(dados[,1:10])
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA)
head(dados[,1:10])
summary(dados$v2)
str(dados$v2)
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA)
dados$v2
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edFpMalBzelZxa1dxZFByR29FVUFjM3c&output=csv")
ncol  <- max(count.fields(textConnection(meuCsv), sep =","))
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA)
dados$v2
dados$v3
dados$v4
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA, enconding = "UTF-8")
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA, enconding="UTF-8")
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA)
dados$v4
dados$v5
dados$v6
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA, encoding="latin1")
dados$v6
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA, encoding="UTF-8")
dados$v6
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edFpMalBzelZxa1dxZFByR29FVUFjM3c&output=csv")
ncol  <- max(count.fields(textConnection(meuCsv), sep =","))
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA, encoding="UTF-8")
dados$v6
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edFpMalBzelZxa1dxZFByR29FVUFjM3c&single=true&gid=1&output=csv")
ncol  <- max(count.fields(textConnection(meuCsv), sep =","))
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA, encoding="UTF-8")
dados$v6
table(dados$v6)
levels(dados$v6)
str(dados$v6)
sapply(dados, srt)
sapply(dados, str)
sapply(dados, levels)
sapply(dados, levels, simplify=TRUE)
table(dados$v6)
dados  <- read.csv(textConnection(meuCsv), header=T, fill = FALSE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA, encoding="UTF-8")
table(dados$v6)
head(dados[,1:6])
head(dados[,1:10])
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = "NA", colClasses = NA, encoding="UTF-8")
head(dados[,1:10])
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = c("NA",""), colClasses = NA)
head(dados[,1:10])
dados  <- read.csv(textConnection(meuCsv), header=T, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = c("NA",""))
head(dados[,1:10])
summary(dados$v2)
table(dados$v4)
cbind(table(dados$v4))
install.packages("pwr")
library(pwer)
library(pwr)
?pwer
?pwr
?pwr.chisq.test
pwr.chisq.test(N= 16, df=3, sig.level=.05, power=.8)
cohen.ES(test="chisq", size=small)
cohen.ES(test="chisq", size="small")
cohen.ES(test="chisq", size="large")
pwr.chisq.test(N= 16, df=1, sig.level=.05, power=.8)
pwr.chisq.test(N= 16, df=1, sig.level=.05, power=.7)
cohen.ES(test="chisq", size="medium")
cohen.ES(test="chisq", size="large")
cite("pwr")
cite()
citation()
citation(pwr)
citation("pwr")
library(RCurl)# Carregando pacote RCurl
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edFpMalBzelZxa1dxZFByR29FVUFjM3c&single=true&gid=1&output=csv")  #salvando o link para a planilha do Google
ncol  <- max(count.fields(textConnection(meuCsv), sep =",")) # Estimando o número de colunas da tabela
install.packages("RCurl") # Instalando o pacote RCurl
library(RCurl)# Carregando pacote RCurl
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edFpMalBzelZxa1dxZFByR29FVUFjM3c&single=true&gid=1&output=csv")  #salvando o link para a planilha do Google
ncol  <- max(count.fields(textConnection(meuCsv), sep =",")) # Estimando o número de colunas da tabela
dados  <- read.csv(textConnection(meuCsv), header=TRUE, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = c("NA",""))
install.packages("car")
library("car")
head(dados)
names(dados)
dados[1:3,] # casos de um a três
dados[,1:3] # ver três primeiras variáveis de todos os casos
dados[1:10, 1:3] # ver trẽs primeiras variáveis dos 10 primeiros casos
dados[1:10, c("v1", "v40", "v42")] # ver variáveis v1, v40, v42 dos 10 primeiros casos
str(dados$v2)
summary(dados$v3)
summary(dados$v2)
levels(dados$v2)
levels(dados$v3)
summary(dados$ex1)
dados$ex1[dados$v2<=20] <- "Menor ou igual a Vinte"
dados$ex1[dados$v2>20] <- "Maior que Vinte"
summary(dados$ex1)
table(dados$ex1)
table(dados$v3)
levels(dados$v3)
dados$ex2[dados$v3 == "Feminino"]  <- "Mulher"
dados$ex2[dados$v3 == "Masculino"]  <- "Homem"
table(dados$ex2)
dados$ex3[dados$v3 == "Feminino" & dados$v2 < 21]  <- "Mulher com menos de 21 anos"
dados$ex3[dados$v3 == "Feminino" & dados$v2 >= 21]  <- "Mulher com 21 ou mais anos"
table(dados$ex3)
library(RCurl)
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edFpMalBzelZxa1dxZFByR29FVUFjM3c&single=true&gid=1&output=csv", ssl.verifypeer = FALSE)  #salvando o link para a planilha do Google
library("RCurl")
?RCurl
??RCurl
meuCsv  <- getURL("https://www.informalcool.org.br/admin/reports/export_audit", ssl.verifypeer = FALSE)
meuCsv  <- getURL("https://www.informalcool.org.br/admin/reports/export_audit", ssl.verifypeer = FALSE)
meuCsv  <- getURL("https://www.informalcool.org.br/admin/reports/export_audit")
read.csv("ftp103.redehost.com.br", header=TRUE)
library(RCurl)# Carregando pacote RCurl
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0AoPQFK9g2JridFlIYXZabWNRWXN0Um9mLVFOVzNKbXc&single=true&gid=0&output=csv", ssl.verifypeer = FALSE)  #salvando o link para a planilha do Google
ncol  <- max(count.fields(textConnection(meuCsv), sep =",")) # Estimando o número de colunas da tabela
dados  <- read.csv(file.choose(),  header=TRUE, sep=",", col.names = paste0("v", seq_len(ncol)), na.strings = c("NA",""), strip.white = TRUE)
summary(dados$v3) # Estatística para variável númerica, idade
quantile(dados$v3)
quantile(dados$v3, na.rm=TRUE)
?quantile
quantile(dados$v3,probs=c(.5,.75) , na.rm=TRUE)
quantile(dados$v3,probs=c(.1,.2,.5,.75) , na.rm=TRUE)
library(psych)
describe(dados$v3)
summary(dados$v3)
mytable <- table(dados$v6)
table(dados$v6)
prop.table(dados$v6)
table(dados$v6)
nrows(dados$v)
nrows(dados$v6)
nrow(dados$v6)
sum(dados$v6)
nrow(dados$v6)
nrow(dados)
sum(table(dados$v6))
table(dados$v6/sum(table(dados$v6)))
dados$v6/sum(table(dados$v6)
)
table(dados$v6)
table(dados$v6)/sum(table(dados$v6))
round(table(dados$v6)/sum(table(dados$v6)),2)
round(cbind(table(dados$v6)/sum(table(dados$v6))),2)
f.table  <- function(var) {
round(cbind(table(var)/sum(table(dados$v6))), 2)
}
f.table(dados$v6)
f.table  <- function(var) {
round(cbind(sort(table(var)/sum(table(dados$v6)), decreasing=TRUE)), 2)
}
f.table(dados$v6)
round(cbind(sort(table(var)/sum(table(dados$v6)*100), decreasing=TRUE)), 2)
f.table  <- function(var) {
round(cbind(sort(table(var)/sum(table(dados$v6)*100), decreasing=TRUE)), 2)
}
f.table(dados$v6)
f.table  <- function(var) {
round(cbind(sort(table(var)/sum(table(dados$v6)), decreasing=TRUE)), 2)
}
f.table(dados$v6)
describe
summary
alpha
setwd("~/Dropbox/cursos/r-psicologia/aula-4")
dados <- read.csv(https://github.com/henriquepgomide/r-ciencias-saude/blob/master/aula-4/autoestima.csv)
dados <- read.csv("https://github.com/henriquepgomide/r-ciencias-saude/blob/master/aula-4/autoestima.csv")
dados <- read.table("https://github.com/henriquepgomide/r-ciencias-saude/blob/master/aula-4/autoestima.csv")
url?
a
?url
dados <- read.table("http://github.com/henriquepgomide/r-ciencias-saude/blob/master/aula-4/autoestima.csv")
dados <- read.table("https://raw.github.com/henriquepgomide/r-ciencias-saude/master/aula-4/autoestima.csv")
dados <- read.table("http://raw.github.com/henriquepgomide/r-ciencias-saude/master/aula-4/autoestima.csv")
dados  <- read.csv("https://www.dropbox.com/s/yg5ah2au41zoeun/autoestima.csv", header=TRUE, sep=",")
dados  <- read.table("https://www.dropbox.com/s/yg5ah2au41zoeun/autoestima.csv", header=TRUE, sep=",")
dados  <- read.table("https://www.dropbox.com/s/yg5ah2au41zoeun/autoestima.csv", header=TRUE, sep=",")
dados  <- read.table("http://www.dropbox.com/s/yg5ah2au41zoeun/autoestima.csv", header=TRUE, sep=",")
dados  <- read.csv(file.choose(), header=TRUE, sep=",")
dados[1:10,1:10]
levels(dados$v7)
levels(dados$v8)
levels(dados$v10)
levels(dados$v11)
levels(dados$v9)
View(dados)
names(dados)
dados  <- read.csv(autoestima.csv)
dados  <- read.csv("autoestima.csv")
View(dados)
library("slidify")
setwd("~/Dropbox/cursos/r-psicologia/aula-4/parte-1")
author("slide")
dados  <- read.csv("~/Dropbox/cursos/r-psicologia/aula-4/autoestima.csv")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
meand(dados$v3)
mean(dados$v3)
mean(dados$v3, na.rm = TRUE)
mean(dados$v3, na.rm = TRUE)
slidify("index.Rmd")
median(dados$v3, na.rm = TRUE) # o argumento na.rm = TRUE significa para retirar os casos faltosos no banco.
median(dados$v3) # o argumento na.rm = TRUE significa para retirar os casos faltosos no banco.
?sd
var(dados$v3, na.rm = TRUE) # o argumento na.rm = TRUE significa para retirar os casos faltosos no banco.
sd(dados$v3, na.rm = TRUE) # o argumento na.rm = TRUE significa para retirar os casos faltosos no banco.
sd(dados$v3)^2
sd(dados$v3, na.rm = TRUE)^2
IQR(dados$v3, na.rm = TRUE) # o argumento na.rm = TRUE significa para retirar os casos faltosos no banco.
boxplot(dados$v3)
quantile(dados$v3, na.rm = TRUE, probs = c(.5,.10,.90,.95)) # percentis 5, 10, 90 e 95.
quantile(dados$v3, na.rm = TRUE, probs = c(.25.5.75))
quantile(dados$v3, na.rm = TRUE, probs = c(.25,.5,75))
quantile(dados$v3, na.rm = TRUE, probs = c(.25,.5,.75))
install.packages("ESPRESSO")
require(EXPRESSO)
require(ESPRESSO)
skewa  <- skew.rnorm(1000, mean= 100, sd= 20, skew = - 1)
hist(skewa)
skewa  <- skew.rnorm(1000, mean= 100, sd= 20, skew = - 3)
hist(skewa)
install.packages("ggplot2")
skewneg  <- data.frame(length = skew.rnorm(1000, mean= 100, sd= 20, skew = - 3))
skewpos  <- data.frame(length = skew.rnorm(1000, mean= 100, sd= 20, skew = 3))
skewno  <- data.frame(length = skew.rnorm(1000, mean= 100, sd= 20, skew = 0))
skewneg$skew  <- "Negativo"
skewpos$skew  <- "Positivo"
skewno$skew  <- "Zero"
require(ggplot2)
skewLengths  <- rbind(skewno, skewneg, skewpos)
skewneg$skew  <- "Negativo"
skewpos$skew  <- "Positivo"
skewno$skew  <- "Zero"
skewLengths  <- rbind(skewno, skewneg, skewpos)
ggplot(vegLengths, aes(length, fill = veg)) + geom_density(alpha = 0.2)
ggplot(skewLengths, aes(length, fill = skew)) + geom_density(alpha = 0.2)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
library("psych")
desribe(dados$v3)
describe(dados$v3)
?describe
summary(dados$v3)
summary(dados$v3)
sapply(dados$v3, summary)
sapply(dados, summary)
tapply(dados, summary)
sapply(dados, summary)
sapply(dados[,1:10], summary)
sapply(dados[,1:5], summary)
sapply(dados[,3:6], summary)
sapply(dados[,c("v3", "somaescala")], summary)
sapply(dados[,c("v10", "v11","v12","v13")], summary)
sapply(dados[,c("v3", "somaescala")], summary)
by(dados, dados$v4, summary)
summary(dados$v3)
by(dados$v3, dados$v4, summary)
---
split(dados$v3, dados$v4, summary)
dados$v4
dados$v4
dados$v4
dados$v6
split(dados$v3, dados$v6)
by(data = dados$v3, INDICES= dados$v6, summary)
levels(dados$v6)
mulheres  <- subset(dados, dados$v6 == "Feminino")
mulheresadultas  <- subset(dados, dados$v6 == "Feminino" && dados$v3>=18)
mulheresadultas  <- subset(dados, dados$v6 == "Feminino" & dados$v3 >= 18)
summary(mulheres)
summary(mulheres$somaescala)
summary(mulheresadultas$somaescala)
str(subset)
subset
?subset
tapply(dados[,10:19], dados$v6, summary)
tapply(dados, dados$v6, summary)
summary(mulheresadultas$somaescala)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
describe(dados[,10:19])
describe(dados[,11:19])
describe(dados[,11:20])
describe(dados[,c(11:20,"somaescala")])
describe(dados[,c(11,"somaescala")])
describe(dados[,11:20])
summary(dados[,11:20])
describe(dados[,11:20])
describe(dados[,21:30])
describe(dados[,21:31])
summary(dados[,21:31])
cbind(summary(dados[,21:31]))
describe(summary(dados[,21:31]))
describe(summary(dados[,21:31]))
describe(dados[,21:31]))
describe(dados[,21:31])
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
require(ggplot2)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/Dropbox/cursos/r-psicologia/aula-4/parte-2/slide")
hist(dados$v3)
hist(dados$v3, main="Título")
hist(dados$v3, main="Título", xlab="Idade em anos", ylab="Frequência")
hist(dados$v3, main="Título", xlab="Idade em anos", ylab="Frequência", xlim=c(0,80))
hist(dados$v3, main="Título", xlab="Idade em anos", ylab="Frequência", xlim=c(0,80), ylim=c(0,50))
hist(dados$v3, main="Título", xlab="Idade em anos", ylab="Frequência", xlim=c(0,80), ylim=c(0,40))
library(dados$v3)
library(lattice)
histogram(dados$v3)
histogram(dados$v3, subset(dados$v6))
histogram(dados$v3, subset = dados$v6)
histogram(dados$v3)
histogram(dados$v3 ~ dados$v6)
histogram(dados$v3)
plot(dados$v18r, dados$v19r)
plot(dados$v3, dados$somaescala)
xyplot(dados$v3, dados$somaescala)
xyplot(dados$v3, as.numeric(dados$somaescala)
)
xyplot(as.numeric(dados$v3), dados$somaescala)
?xyplot
xyplot(somaescala ~ v6, data = dados)
xyplot(somaescala ~ v3, data = dados)
xyplot(somaescala ~ v10r | v11r, data = dados)
xyplot(somaescala ~ v10r , data = dados)
xyplot(somaescala ~ v3 , data = dados)
barplot(dados$6)
barplot(dados$v6)
barplot(dados$somaescala, dados$v6)
barplot(dados$somaescala)
barplot(dados$v4)
barplot(dados$v6)
?barplot
barplot(dados$v4)
graphBar  <- table(dados$v4)
barplot(graphBar)
dados$v4
dados$v6
graphBar  <- table(dados$v6)
barplot(graphBar)
barchart(v6, data=dados)
?barchart
hist(somaescala ~ v6, main="Título")
xyplot(somaescala ~ v3 , groups = v6 , data = dados)
barchart(somaescala, group = v6 , data=dados)
barchart(somaescala, group = v6 , data = dados)
barchart(somaescala ~ v3, group = v6 , data = dados)
barchart(somaescala ~ v6,  data = dados)
barchart(somaescala ,  data = dados)
barchart(v6 ~ somaescala ,  data = dados)
barchart(somaescala | v6,  data = dados)
barchart(v3 | v6,  data = dados)
barchart(v3 ~ v6,  data = dados)
barchart(v3 ~ v6,  groups = v6, data = dados)
View(dados)
barchart(v3 ~ v6 | v8,  groups = v6, data = dados)
histogram(dados$v3 | v8)
histogram(v3 | v8, data = dados)
histogram(v3 ~ v6 | v8, data = dados)
histogram(v3data = dados)
histogram(v3, data = dados)
histogram(dados$v3)
barchart(v3 ~ v6 | v8,  groups = v6, data = dados)
barchart(~ v3  | v8,  groups = v6, data = dados)
histogram(~ v3,  data = dados )
histogram(~ v3 | v8,  data = dados )
histogram(~ v3 | v6,  data = dados )
boxplot(dados$somaescala ~ dados$v8)
boxplot(dados$somaescala ~ dados$v9)
bwplot(somaescala ~ v8, data = dados )
bwplot(somaescala ~ v6, data = dados )
bwplot(somaescala ~ v6*v8, data = dados )
bwplot(somaescala ~ v6 * v8, data = dados )
bwplot(somaescala ~ v6 | v8, data = dados )
bwplot(somaescala ~ v8 | v6, data = dados )
bwplot(somaescala ~ v9 | v6, data = dados )
plot(v3 ~ somaescala | v6, data = dados)
plot(v3 ~ somaescala | v8, data = dados)
plot(v3 ~ somaescala | v9, data = dados)
xyplot(v3 ~ somaescala | v9, data = dados)
col()
color()
col
col()
names(col())
?cols
?col
color
?color?
as
?color
hist(dados$v3, main="Título", xlab="Idade em anos", ylab="Frequência", xlim=c(0,80), ylim=c(0,40), col="blue")
hist(dados$v3, main="Título", xlab="Idade em anos", ylab="Frequência", xlim=c(0,80), ylim=c(0,40), col="pink")
hist(dados$v3, main="Título", xlab="Idade em anos", ylab="Frequência", xlim=c(0,80), ylim=c(0,40), col="magenta")
hist(dados$v3, main="Título", xlab="Idade em anos", ylab="Frequência", xlim=c(0,80), ylim=c(0,40), col="blue")
par(mfrow=c(3,1))
hist(dados$v3, main="Título", xlab="Idade em anos", ylab="Frequência", xlim=c(0,80), ylim=c(0,40), col="blue")
par(mfrow=c(1,3))
hist(dados$v3, main="Título", xlab="Idade em anos", ylab="Frequência", xlim=c(0,80), ylim=c(0,40), col="blue")
boxplot(dados$somaescala, dados$v6)
boxplot(dados$somaescala, dados$v6, col = "#900"")
boxplot(dados$somaescala, dados$v6, col = "#900")
boxplot(dados$somaescala, dados$v6, col = #900)
boxplot(dados$somaescala, dados$v6, col = #900))
asdf
boxplot(dados$somaescala, dados$v6, col = "990000"))
boxplot(dados$somaescala, dados$v6, col = "990000")
boxplot(dados$somaescala, dados$v6, col = "999900")
boxplot(dados$somaescala, dados$v6, col = "999900")
boxplot(dados$somaescala, dados$v6, col = "990099")
boxplot(dados$somaescala, dados$v6, col = "green")
par(mfrow=c(1,3))
hist(dados$v3, main="Título", xlab="Idade em anos", ylab="Frequência", xlim=c(0,80), ylim=c(0,40), col="blue")
boxplot(dados$somaescala, dados$v6, col = "green")
plot(dados$somaescala, dados$v3, col = "red")
slidify("index.Rmd")
par(mfrow=c(1,1))
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
hist(dados$somaescala ~ dados$v3, main="Título")
hist(dados$somaescala, main="Título")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
save.image("~/Dropbox/cursos/r-psicologia/aula-4/aula4.RData")
confint(mean(dados$v3))
confint(dados$v3)
?confint
install.packages(epicalc)
install.packages("epicalc")
library("epicalc")
ci(dados$v3)
library(psych)
describe(dados$v3)
setwd("~/Dropbox/cursos/r-psicologia/aula-5/parte-1/slide")
a  <- rnorm(1000, 100, 20)
plot(a)
histt(a)
hist(a)
abline(rnorm(1000, 100, 20))
abline(a = a)
line
?line
a  <- rnorm(1000, 100, 20)
hist(a)
line(100:120)
line(100:120)
abline(100:120)
abline(100:120, 0:200)
abline(100, )
abline(100, 10 )
abline(rnorm(1000,100,20), 10)
