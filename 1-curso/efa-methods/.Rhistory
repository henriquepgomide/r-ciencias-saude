graphAccess + geom_freqpoly(colour = "blue", xlim=c(0,12)) + labs(x = "Month", y = "Frequency")
graphAccess + geom_freqpoly(colour = "blue", binwidth = range/15 + labs(x = "Month", y = "Frequency")
graphAccess + geom_freqpoly(colour = "blue", binwidth = range/15 + labs(x = "Month", y = "Frequency")
graphAccess + geom_freqpoly(colour = "blue", binwidth = range/15) + labs(x = "Month", y = "Frequency")
graphAccess + geom_freqpoly(colour = "blue", binwidth = 12) + labs(x = "Month", y = "Frequency")
graphAccess + geom_freqpoly(colour = "blue", binwidth = 30) + labs(x = "Month", y = "Frequency")
graphAccess + geom_freqpoly(colour = "blue", binwidth = 10) + labs(x = "Month", y = "Frequency")
graphAccess + geom_freqpoly(colour = "blue", binwidth = 10) + labs(x = "Month", y = "Frequency") + + xlim(0, 12)
graphAccess + geom_freqpoly(colour = "blue", binwidth = 10) + labs(x = "Month", y = "Frequency") + xlim(0,12)
format(ga.data$date, format = "%m")
format(ga.data$date, format = "%b")
names(format(ga.data$date, format = "%b"))
teste  <- format(ga.data$date, format = "%b")
names(teste)
levels(teste)
teste  <- as.character(format(ga.data$date, format = "%b"))
levels(teste)
teste  <- as.factor(format(ga.data$date, format = "%b"))
levels(teste)
graphAccess + geom_freqpoly(colour = "blue", binwidth = 10) + labs(x = "Month", y = "Frequency") + xlim(levels(as.factor(format(ga.data$date, format = "%b"))))
graphAccess + geom_freqpoly(colour = "blue", binwidth = 10) + labs(x = "Month", y = "Frequency")
graphCountry  <- ggplot(ga.data, aes(country))
graphCountry  + geom_bar()
barplot(table(ga.data$country))
summary(ga.data$country)
summary(as.factor(ga.data$country)
)
table(ga.data$country)
table(sort(ga.data$country), decreasing = TRUE)
sort(table(ga.data$country), decreasing = TRUE)
a  <- sort(table(ga.data$country), decreasing = TRUE)
a
a  <- as.list(sort(table(ga.data$country), decreasing = TRUE))
a
table.final  <- a[1:10]
table.final
table.final[[11]]  <- sum(a[11:45])
- a[11]
a[11]
a[11] + a[12]
a[[11] + a[[12]
a[[11] + a[[12]]
table.final  <- a[1:10]
barplot(table.final)
a.oper <- a[1:10]
table.country  <- as.array(a.oper)
table.country
table(sort(table(ga.data$country), decreasing = TRUE))
sort(table(ga.data$country), decreasing = TRUE)
barplot(sort(table(ga.data$country), decreasing = TRUE))
barplot(sort(table(ga.data$country), decreasing = TRUE), names.arg=c("Brazil", "Belarus", "Portugal"))
barplot(sort(table(ga.data$country), decreasing = TRUE))
height(table)
height(table(ga.data$country))
barplot(sort(table(ga.data$country), decreasing = TRUE), legend.text=(Brazil) )
barplot(sort(table(ga.data$country), decreasing = TRUE), legend.text=("Brazil") )
barplot(sort(table(ga.data$country), decreasing = TRUE), beside= TRUE )
barplot(sort(table(ga.data$country), decreasing = TRUE), beside= FALSE )
sort(table(ga.data$country), decreasing = TRUE)
cbind(sort(table(ga.data$country), decreasing = TRUE))
teset  <- cbind(sort(table(ga.data$country), decreasing = TRUE))
teste  <- cbind(sort(table(ga.data$country), decreasing = TRUE))
print(teste)
print(teste[1:5])
print(teste[teste>100])
teste  <- cbind(sort(table(ga.data$country > 100), decreasing = TRUE))
teste
print(teste[teste>100])
teste  <- cbind(sort(table(ga.data$country), decreasing = TRUE))
print(teste[teste>100])
teste
print(teste[teste>100])
subset(ga.data, country > 100)
ga.data$country
teste  <- subset(ga.data, country > 100)
table(teste)
table(teste$country)
graphAccess  <- ggplot(ga.data, aes(date))
graphAccess + geom_freqpoly(colour = "blue", binwidth = 10) + labs(x = "Month", y = "Frequency")
sqrt(0.15)
save.image("~/Dropbox/Mestrado/dissertação/analises/base.RData")
library(RCurl)# Carregando pacote RCurl
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edGFWOXVPZWlDal9RUXJ2VE5pT1ZDZEE&single=true&gid=2&output=csv", ssl.verifypeer = FALSE)  #salvando o link para a planilha do Google
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edGFWOXVPZWlDal9RUXJ2VE5pT1ZDZEE&single=true&gid=2&output=csv", ssl.verifypeer = FALSE)  #salvando o link para a planilha do Google
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edGFWOXVPZWlDal9RUXJ2VE5pT1ZDZEE&single=true&gid=2&output=csv", ssl.verifypeer = FALSE)  #salvando o link para a planilha do Google
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edGFWOXVPZWlDal9RUXJ2VE5pT1ZDZEE&single=true&gid=2&output=csv")  #salvando o link para a planilha do Google
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edGFWOXVPZWlDal9RUXJ2VE5pT1ZDZEE&single=true&gid=2&output=csv")  #salvando o link para a planilha do Google
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edGFWOXVPZWlDal9RUXJ2VE5pT1ZDZEE&single=true&gid=2&output=csv")  #salvando o link para a planilha do Google
meuCsv  <- getURL("https://docs.google.com/spreadsheet/pub?key=0Atv-ntf9TI4edGFWOXVPZWlDal9RUXJ2VE5pT1ZDZEE&single=true&gid=2&output=csv", ssl.verifypeer = FALSE)  #salvando o link para a planilha do Google
ncol  <- 12
dados  <- read.csv(file.choose(), header=TRUE, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = c("NA",""))
head(dados)
summary(dados$v4)
sd(dados$v4)
boxplot(dados$v4)
48-25.5
ncol  <- 12
dados  <- read.csv(file.choose(), header=TRUE, fill = TRUE, col.names = paste0("v", seq_len(ncol)), na.strings = c("NA",""))
head(dados)
summary(dados$v12)
hist(dados$v12)
library(MBESS)
poder.alcool <- ss.power.R2(alpha.level=.05, p=5, Specified.N= 169, Population.R2=.147, desired.power=.8)
poder.alcool
poder.alcool <- ss.power.R2(alpha.level=.05, p=5, Specified.N= 169, Population.R2=.147)
poder.alcool
load("~/Dropbox/Mestrado/artigo-estigma/analises de dados/distancia.social.RData")
cite()
citation()
full.model.alcool
full.model.alcool  <- lm(sum.c.distsoc ~ sexo + idade + conv.depen + c.perigo + c.recuperacao, data = estigma, na.action = na.exclude)
summary(full.model.alcool)
confint(full.model.alcool) #call conf. intervals for vars
round(confint(full.model.alcool), 2) #call conf. intervals for vars
lm.beta(full.model.alcool) #call standardized regression coefficients
install.packages("QuantPsyc")
library(QuantPsyc)
lm.beta(full.model.alcool) #call standardized regression coefficients
round(lm.beta(full.model.alcool),2) #call standardized regression coefficients
full.model.cocaina  <- lm(sum.d.distsoc ~ sexo + idade + conv.depen + d.perigo + d.recuperacao, data = estigma, na.action = na.exclude)
summary(full.model.cocaina)
lm.beta(full.model.cocaina) #call standardized regression coefficients
round(lm.beta(full.model.cocaina),2) #call standardized regression coefficients
full.model.maconha  <- lm(sum.e.distsoc ~ sexo + idade + conv.depen + e.perigo + e.recuperacao, data = estigma, na.action = na.exclude)
summary(full.model.maconha)
summary(full.model.maconha, digits=c(2,2,2,3))
summary(full.model.maconha, digits=c(2,2,2,3))
summary(full.model.maconha, digits=2L)
summary(full.model.maconha, digits=henrique)
summary(full.model.maconha, digits="2")
summary(full.model.maconha, digits=-3)
summary(full.model.maconha, digits=0)
round(lm.beta(full.model.maconha),2 #call standardized regression coefficients
)
round(lm.beta(full.model.maconha),2) #call standardized regression coefficients
full.model.maconha
round(full.model.maconha,2)
full.model.maconha$coefficients
cbind(round(full.model.maconha$coefficients,2))
summary(full.model.maconha, digits = c(0,3,3,2,2))
summary(full.model.alcool)
library(MBESS)
full.model.alcool$effects
full.model.alcool$qr
full.model.alcool$
full.model.alcool$fitted.valueslibrary
summary(full.model.alcool)
0.1472/(1 - 0.1472)
summary(full.model.cocaina)
0.1542/(1 - 0.1542)
summary(full.model.maconha)
0.153/(1 - 0.153)
setwd("~/Dropbox/cursos/r-psicologia/efa-methods")
dados  <- read.csv("self-stigma.csv")
setwd("~/Dropbox/cursos/r-psicologia/efa-methods")
setwd("~/Dropbox/cursos/r-psicologia/efa-methods")
dados  <- read.csv("self-stigma.csv")
heaad(dados)
head(dados)
dados  <- read.csv("self-stigma.csv", na.strings = c(777,888,999))
head(dados)
names(dados)
cbind(names(dados))
selfStigma  <- dados[,16:44]
names(selfStigma)
library(car)
library(psych)
summary(selfStigma$C1)
selfStigma$C14[1:5]
selfStigma$C14  <- Recode(selfStigma$C14, "4=1; 3=2; 2=3; 1=4")
selfStigma$C14[1:5]
selfStigma$C26  <- Recode(selfStigma$C26, "4=1; 3=2; 2=3; 1=4")
selfStigma$C27  <- Recode(selfStigma$C27, "4=1; 3=2; 2=3; 1=4")
selfStigma$C07  <- Recode(selfStigma$C07, "4=1; 3=2; 2=3; 1=4")
selfStigma$C24  <- Recode(selfStigma$C24, "4=1; 3=2; 2=3; 1=4")
selfStigma$soma  <- rowSums(selfStigma)
selfStigma$soma
hist(selfStigma$soma)
kmo = function( data ){
library(MASS)
X <- cor(as.matrix(data))
iX <- ginv(X)
S2 <- diag(diag((iX^-1)))
AIS <- S2%*%iX%*%S2                      # anti-image covariance matrix
IS <- X+AIS-2*S2                         # image covariance matrix
Dai <- sqrt(diag(diag(AIS)))
IR <- ginv(Dai)%*%IS%*%ginv(Dai)         # image correlation matrix
AIR <- ginv(Dai)%*%AIS%*%ginv(Dai)       # anti-image correlation matrix
a <- apply((AIR - diag(diag(AIR)))^2, 2, sum)
AA <- sum(a)
b <- apply((X - diag(nrow(X)))^2, 2, sum)
BB <- sum(b)
MSA <- b/(b+a)                        # indiv. measures of sampling adequacy
AIR <- AIR-diag(nrow(AIR))+diag(MSA)  # Examine the anti-image of the correlation matrix. That is the  negative of the partial correlations, partialling out all other variables.
kmo <- BB/(AA+BB)                     # overall KMO statistic
# Reporting the conclusion
if (kmo >= 0.00 && kmo < 0.50){test <- 'The KMO test yields a degree of common variance unacceptable for FA.'}
else if (kmo >= 0.50 && kmo < 0.60){test <- 'The KMO test yields a degree of common variance miserable.'}
else if (kmo >= 0.60 && kmo < 0.70){test <- 'The KMO test yields a degree of common variance mediocre.'}
else if (kmo >= 0.70 && kmo < 0.80){test <- 'The KMO test yields a degree of common variance middling.' }
else if (kmo >= 0.80 && kmo < 0.90){test <- 'The KMO test yields a degree of common variance meritorious.' }
else { test <- 'The KMO test yields a degree of common variance marvelous.' }
ans <- list( overall = kmo,
report = test,
individual = MSA,
AIS = AIS,
AIR = AIR )
return(ans)
}
kmo(selfStigma)
View(selfStigma)
kmo(selfStigma[, complete.cases(selfStigma)])
kmo(selfStigma[complete.cases(selfStigma), ])
kmo.selfStigma  <- kmo(selfStigma[complete.cases(selfStigma), ])
print(kmo.selfStigma$overall)
bartlett.test(selfStigma)
alienacao  <- selfStigma$C1 + selfStigma$C17 + selfStigma$C21 + + selfStigma$C05 + + selfStigma$C16 + + selfStigma$C08
aprovacao  <- + selfStigma$C29 + + selfStigma$C18 + selfStigma$C02 + selfStigma$C19 + selfStigma$C10 + selfStigma$C06 + selfStigma$C23
discri  <- selfStigma$C03 + selfStigma$C28 + selfStigma$C22 + selfStigma$C15 + selfStigma$C25
evitacao  <- selfStigma$C11 + selfStigma$C09 + selfStigma$C12 + selfStigma$C20 + selfStigma$C13 + selfStigma$C04
resistencia  <- selfStigma$C14 + selfStigma$C26 + selfStigma$C27 + selfStigma$C07 + selfStigma$C24
alienacao  <- selfStigma$C1 + selfStigma$C17 + selfStigma$C21 + selfStigma$C05 + selfStigma$C16 + selfStigma$C08
alienacao
selfStigma$alienacao  <- selfStigma$C1 + selfStigma$C17 + selfStigma$C21 + selfStigma$C05 + selfStigma$C16 + selfStigma$C08
selfStigma$alienacao  <- selfStigma$C1 + selfStigma$C17
selfStigma$alienacao  <- selfStigma$C1 + selfStigma$C17 + selfStigma$C21 + selfStigma$C5 + selfStigma$C16 + selfStigma$C8
selfStigma$alienacao
selfStigma$alienacao  <- selfStigma$C1 + selfStigma$C17 + selfStigma$C21 + selfStigma$C5 + selfStigma$C16 + selfStigma$C8
selfStigma$aprovacao  <- selfStigma$C29 +  selfStigma$C18 + selfStigma$C2 + selfStigma$C19 + selfStigma$C10 + selfStigma$C6 + selfStigma$C23
selfStigma$discri  <- selfStigma$C3 + selfStigma$C28 + selfStigma$C22 + selfStigma$C15 + selfStigma$C25
selfStigma$evitacao  <- selfStigma$C11 + selfStigma$C9 + selfStigma$C12 + selfStigma$C20 + selfStigma$C13 + selfStigma$C4
selfStigma$resistencia  <- selfStigma$C14 + selfStigma$C26 + selfStigma$C27 + selfStigma$C7 + selfStigma$C24
rm(alienacao)
rm(aprovacao)
rm(discri)
rm(evitacao)
fa.parallel(self$Stigma, fm="pa")
fa.parallel(selfStigma, fm="pa")
?fa.parallel
fa.parallel(selfStigma, fm="ml", fa=(pc))
fa.parallel(selfStigma, fm="ml", fa="pc")
fa.parallel(selfStigma, fm="ml")
fa.parallel(selfStigma[complete.cases(selfStigma),], fm="ml", fa="pc")
fa.parallel(selfStigma, fm="ml", fa="pc")
fa.parallel(selfStigma)
selfStigma  <- selfStigma[complete.cases(selfStigma), ]
selfStigma  <- dados[,16:44]
selfStigma  <- selfStigma[complete.cases(selfStigma), ]
selfStigma  <- dados[,16:44]
selfStigma  <- selfStigma[complete.cases(selfStigma), ]
selfStigma$C14  <- Recode(selfStigma$C14, "4=1; 3=2; 2=3; 1=4")
selfStigma$C26  <- Recode(selfStigma$C26, "4=1; 3=2; 2=3; 1=4")
selfStigma$C27  <- Recode(selfStigma$C27, "4=1; 3=2; 2=3; 1=4")
selfStigma$C07  <- Recode(selfStigma$C07, "4=1; 3=2; 2=3; 1=4")
selfStigma$C24  <- Recode(selfStigma$C24, "4=1; 3=2; 2=3; 1=4")
dados  <- read.csv("self-stigma.csv", na.strings = c(777,888,999))
selfStigma  <- dados[,16:44]
selfStigma  <- selfStigma[complete.cases(selfStigma), ]
selfStigma$C14  <- Recode(selfStigma$C14, "4=1; 3=2; 2=3; 1=4")
selfStigma$C26  <- Recode(selfStigma$C26, "4=1; 3=2; 2=3; 1=4")
selfStigma$C27  <- Recode(selfStigma$C27, "4=1; 3=2; 2=3; 1=4")
selfStigma$C7  <- Recode(selfStigma$C7, "4=1; 3=2; 2=3; 1=4")
selfStigma$C24  <- Recode(selfStigma$C24, "4=1; 3=2; 2=3; 1=4")
selfStigma$soma  <- rowSums(selfStigma)
selfStigma$alienacao  <- selfStigma$C1 + selfStigma$C17 + selfStigma$C21 + selfStigma$C5 + selfStigma$C16 + selfStigma$C8
selfStigma$aprovacao  <- selfStigma$C29 +  selfStigma$C18 + selfStigma$C2 + selfStigma$C19 + selfStigma$C10 + selfStigma$C6 + selfStigma$C23
selfStigma$discri  <- selfStigma$C3 + selfStigma$C28 + selfStigma$C22 + selfStigma$C15 + selfStigma$C25
selfStigma$evitacao  <- selfStigma$C11 + selfStigma$C9 + selfStigma$C12 + selfStigma$C20 + selfStigma$C13 + selfStigma$C4
selfStigma$resistencia  <- selfStigma$C14 + selfStigma$C26 + selfStigma$C27 + selfStigma$C7 + selfStigma$C24
kmo.selfStigma  <- kmo(selfStigma)
print(kmo.selfStigma$overall)
bartlett.test(selfStigma)
fa.parallel(selfStigma)
fa.parallel(selfStigma, n.obs = 299, fm="ml")
fa.parallel(selfStigma, fa="")
fa.parallel(selfStigma, fa="ml")
parallel analysis  <- fa.parallel(selfStigma, fa="ml")
pa  <- fa.parallel(selfStigma, fa="ml")
pa$nfact
pa$ncomp #
scree
?scree
scree(selfStigma)
pa  <- fa.parallel(selfStigma, fa="ml", fa="pc")
pa  <- fa.parallel(selfStigma, fa="pc")
pa  <- fa.parallel(selfStigma, fa="ml")
pa$nfact # nfactors 6
pa$ncomp # ncomp 4
VSS(selfStigma)
selfStigma  <- dados[,16:44]
selfStigma  <- selfStigma[complete.cases(selfStigma), ]
pa  <- fa.parallel(selfStigma, fa="ml")
VSS(selfStigma, rotate="varimax", fm="mle")
?VSS
?fa.paprallel
?fa.parallel
VSS(selfStigma, rotate="oblimin", fm="mle")
VSS(selfStigma, fm="mle")
stigma.clus <- ICLUST(selfStigma)
ICLUST.rgraph(stigma.clus, labels = neo.label[, ], min.size = 4)
stigma.clus$cor
?ICLUST
stigma.clus <- ICLUST(selfStigma, output = 3)
stigma.clus
stigma.clus <- ICLUST(selfStigma, nclusters=5)
stigma.clus <- ICLUST(selfStigma, min.size = 5)
stigma.clus <- ICLUST(selfStigma)
stigma.clus
alpha(selfStigma)
selfStigma  <- dados[,16:44]
selfStigma  <- selfStigma[complete.cases(selfStigma), ]
alpha(selfStigma)
VSS(selfStigma, fm="mle") # nfactors 1 or 2
pa  <- fa.parallel(selfStigma, fa="ml")
stigma.clus <- ICLUST(selfStigma)
VSS(selfStigma, n.obs = 299) # nfactors 1 or 2
VSS(selfStigma) # nfactors 1
sitgmaFa  <- fa(selfStigma, nfactors= 5 , rotate="varimax", fm = "ml")
stigmaFa  <- fa(selfStigma, nfactors= 5 , rotate="varimax", fm = "ml")
summary(stigmaFa)
print(stigmaFa)
alienacao  <- selfStigma$C1 + selfStigma$C17 + selfStigma$C21 + selfStigma$C5 + selfStigma$C16 + selfStigma$C8
aprovacao  <- selfStigma$C29 +  selfStigma$C18 + selfStigma$C2 + selfStigma$C19 + selfStigma$C10 + selfStigma$C6 + selfStigma$C23
discri  <- selfStigma$C3 + selfStigma$C28 + selfStigma$C22 + selfStigma$C15 + selfStigma$C25
evitacao  <- selfStigma$C11 + selfStigma$C9 + selfStigma$C12 + selfStigma$C20 + selfStigma$C13 + selfStigma$C4
resistencia  <- selfStigma$C14 + selfStigma$C26 + selfStigma$C27 + selfStigma$C7 + selfStigma$C24
alpha(alienacao)
alpha(selfStigma[, c("C1", "C17","C21","C5","C16","C8")])
alpha(selfStigma[, c("C29", "C18","C2","C19","C10","C6", "C23")]) # G6 = .75
alpha(selfStigma[, c("C3", "C28","C22","C15","C25")]) # G6 = .75
alpha(selfStigma[, c("C11", "C9","C12","C20","C13","C4")]) # G6 = .75
alpha(selfStigma[, c("C14", "C26","C27","C7","C24")]) # G6 = .75
print(stigmaFa)
alienacao  <- selfStigma$C1 + selfStigma$C17 + selfStigma$C21 + selfStigma$C5 + selfStigma$C16 + selfStigma$C8
aprovacao  <- selfStigma$C29 +  selfStigma$C18 + selfStigma$C2 + selfStigma$C19 + selfStigma$C10 + selfStigma$C6 + selfStigma$C23
discri  <- selfStigma$C3 + selfStigma$C28 + selfStigma$C22 + selfStigma$C15 + selfStigma$C25
evitacao  <- selfStigma$C11 + selfStigma$C9 + selfStigma$C12 + selfStigma$C20 + selfStigma$C13 + selfStigma$C4
resistencia  <- selfStigma$C14 + selfStigma$C26 + selfStigma$C27 + selfStigma$C7 + selfStigma$C24
corr.test(alienacao,aprovacao,discri)
cor(alienacao,aprovacao,discri)
cor(as.matrix(alienacao,aprovacao,discri)
)
alienacao  <- as.numeric(selfStigma$C1 + selfStigma$C17 + selfStigma$C21 + selfStigma$C5 + selfStigma$C16 + selfStigma$C8)
aprovacao  <- as.numeric(selfStigma$C29 +  selfStigma$C18 + selfStigma$C2 + selfStigma$C19 + selfStigma$C10 + selfStigma$C6 + selfStigma$C23)
aprovacao  <- as.numeric(selfStigma$C29 +  selfStigma$C18 + selfStigma$C2 + selfStigma$C19 + selfStigma$C10 + selfStigma$C6 + selfStigma$C23)
discri  <- as.numeric(selfStigma$C3 + selfStigma$C28 + selfStigma$C22 + selfStigma$C15 + selfStigma$C25)
evitacao  <- as.numeric(selfStigma$C11 + selfStigma$C9 + selfStigma$C12 + selfStigma$C20 + selfStigma$C13 + selfStigma$C4)
resistencia  <- as.numeric(selfStigma$C14 + selfStigma$C26 + selfStigma$C27 + selfStigma$C7 + selfStigma$C24)
factors  <- as.matrix(alienacao, aprovacao, discri, evitacao, resistencia)
cor(factors)
View(factors)
factors  <- data.frame(alienacao, aprovacao, discri, evitacao, resistencia)
factors
cor(factors)
round(cor(factors),2
round(cor(factors),2)
round(cor(factors),2)
cor.test(factors)
library(Hmisc)
rcorr(factors, type="pearson")
rcorr(as.matrix(factors), type="pearson")
?corr.p
corr.p(factors)
corr.p(factors, n = 299)
corr(factors, n = 299)
cor(factors, n = 299)
cor(factors, method="kendall")
round(cor(factors, method="kendall"),2)
print(stigmaFa)
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
print.psych(stigmaFa, cut = 0.3, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors= 4 , rotate="varimax", fm = "ml")
print(stigmaFa)
print.psych(stigmaFa, cut = 0.3, sort = TRUE)
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors= 5 , rotate="varimax", fm = "ml")
print(stigmaFa)
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors= 4 , rotate="varimax", fm = "ml")
print(stigmaFa)
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigma.clus <- ICLUST(selfStigma)
stigmaFa  <- fa(selfStigma, nfactors = 1 , rotate="varimax", fm = "ml")
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 2 , rotate="varimax", fm = "ml")
print(stigmaFa)
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 5 , rotate="varimax", fm = "ml")
print(stigmaFa)
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 4 , rotate="varimax", fm = "ml")
print(stigmaFa)
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 5 , rotate="varimax", fm = "ml")
print(stigmaFa)
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
selfStigma2  <- selfStigma[, c("C1", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "C10", "C11", "C12", "C13", "C15", "C16", "C17", "C19", "C22", "C23", "C26", "C27", "C28", "C29")]
kmo(selfStigma2)
bartlett.test(selfStigma2)
pa2  <- fa.parallel(selfStigma2, fa="ml")
VSS(selfStigma2) # nfactors 1
stigma.clus2 <- ICLUST(selfStigma2)
stigma.clus2 <- ICLUST(selfStigma2, nclusters=1)
stigma.clus2 # yelds
stigma.clus2 <- ICLUST(selfStigma2, nclusters=1)
stigma.clus2 <- ICLUST(selfStigma2, nclusters=1)
stigma.clus2 # yelds
stigmaFa  <- fa(selfStigma2, nfactors = 4 , rotate="varimax", fm = "ml")
print(stigmaFa2)
stigmaFa2  <- fa(selfStigma2, nfactors = 4 , rotate="varimax", fm = "ml")
print(stigmaFa2)
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 5 , rotate="varimax", fm = "ml")
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 4 , rotate="varimax", fm = "ml")
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 6 , rotate="varimax", fm = "ml")
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 4 , rotate="varimax", fm = "ml")
stigmaFa  <- fa(selfStigma, nfactors = 5 , rotate="varimax", fm = "ml")
print(stigmaFa)
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 4 , rotate="varimax", fm = "ml")
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 5 , rotate="varimax", fm = "ml")
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
selfStigma2  <- selfStigma[, c("C1", "C2","C3", "C4", "C5", "C6", "C8", "C9", "C10", "C11", "C12", "C13", "C15", "C16", "C17", "C19", "C22", "C23", "C28", "C29")]
pa2  <- fa.parallel(selfStigma2, fa="ml")
VSS(selfStigma2) # nfactors 1
stigma.clus2 <- ICLUST(selfStigma2, nclusters=1)
stigmaFa2  <- fa(selfStigma2, nfactors = 4 , rotate="varimax", fm = "ml")
print.psych(stigmaFa, cut = 0.4, sort = TRUE)
selfStigma2  <- selfStigma[, c("C1", "C2","C3", "C4", "C5", "C6", "C8", "C9", "C10", "C11", "C12", "C13", "C15", "C16", "C17", "C19", "C22", "C23", "C28", "C29")]
stigmaFa2  <- fa(selfStigma2, nfactors = 4 , rotate="varimax", fm = "ml")
print.psych(stigmaFa2, cut = 0.4, sort = TRUE)
print.psych(stigmaFa2, cut = 0.3, sort = TRUE)
print.psych(stigmaFa2, cut = .4, sort = TRUE)
print.psych(stigmaFa2, cut = .3, sort = TRUE)
print.psych(stigmaFa2, cut = .39, sort = TRUE)
alpha(stigmaFa2)
alpha(selfStigma2)
print.psych(stigmaFa2, cut = .39, sort = TRUE)
selfStigma3  <- selfStigma[, c("C3", "C4", "C5", "C6", "C8", "C9", "C10", "C11", "C12", "C13", "C15", "C16", "C17", "C19", "C22", "C23", "C28")]
selfStigma3  <- selfStigma[, c("C3", "C4", "C5", "C6", "C8", "C9", "C10", "C11", "C12", "C13", "C15", "C16", "C17", "C19", "C22", "C23", "C28")]
alpha(selfStigma3)
pa3  <- fa.parallel(selfStigma3, fa="ml")
VSS(selfStigma3) # nfactors 1
stigma.clus3 <- ICLUST(selfStigma3)
stigmaFa3  <- fa(selfStigma3, nfactors = 4 , rotate="varimax", fm = "ml")
print.psych(stigmaFa2, cut = .39, sort = TRUE)
stigmaFa3  <- fa(selfStigma3, nfactors = 4 , rotate="varimax", fm = "ml")
print.psych(stigmaFa3, cut = .39, sort = TRUE)
alpha(selfStigma3)
alpha(selfStigma3[, c("C22", "C3", "C28", "C15", "C19")])
alpha(selfStigma3[, c("C8", "C12", "C9", "C4","C5","C13")])
alpha(selfStigma3[, c("C17", "C16", "C11")])
alpha(selfStigma3[, c("C6", "C23", "C10")])
stigmaFa  <- fa(selfStigma, nfactors = 4 , rotate="varimax", fm = "ml")
print.psych(stigmaFa, cut = .39, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 5, rotate="varimax", fm = "ml")
print.psych(stigmaFa, cut = .39, sort = TRUE)
print.psych(stigmaFa, cut = .39, sort = TRUE)
selfStigma2  <- selfStigma[, c("C1", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "C10", "C11", "C12", "C13", "C15", "C16", "C17", "C19", "C22", "C23", "C26", "C27","C28", "C29")]
pa2  <- fa.parallel(selfStigma2, fa="ml")
stigmaFa2  <- fa(selfStigma2, nfactors = 5 , rotate="varimax", fm = "ml")
print.psych(stigmaFa2, cut = .39, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 5, rotate="varimax", fm = "ml")
print.psych(stigmaFa, cut = .39, sort = TRUE)
print.psych(stigmaFa2, cut = .39, sort = TRUE)
print.psych(stigmaFa, cut = .39, sort = TRUE)
stigmaFa  <- fa(selfStigma, nfactors = 4, rotate="varimax", fm = "ml")
print.psych(stigmaFa, cut = .39, sort = TRUE)
selfStigma2  <- selfStigma[, c("C1", "C3", "C4", "C5", "C6", "C8", "C9", "C10", "C11", "C12", "C13", "C15", "C16", "C17", "C19", "C22", "C23", "C26", "C27","C28")]
pa2  <- fa.parallel(selfStigma2, fa="ml")
stigmaFa2  <- fa(selfStigma2, nfactors = 4 , rotate="varimax", fm = "ml")
print.psych(stigmaFa2, cut = .39, sort = TRUE)
stigmaFa2  <- fa(selfStigma2, nfactors = 3 , rotate="varimax", fm = "ml")
print.psych(stigmaFa2, cut = .39, sort = TRUE)
4
print.psych(stigmaFa2, cut = .39, sort = TRUE)
stigmaFa2  <- fa(selfStigma2, nfactors = 4 , rotate="varimax", fm = "ml")
print.psych(stigmaFa2, cut = .39, sort = TRUE)
alpha(selfStigma[, c("C9", "C12","C8","C5","C17","C13","C16","C11","C4","C1")])
alpha(selfStigma[, c("C9", "C12","C8","C5","C17","C13","C16","C11","C4","C1")])
alpha(selfStigma[, c("C22", "C3", "C28", "C15", "C19")])
alpha(selfStigma[, c("C26","C27")])
alpha(selfStigma[, c("C6", "C23", "C10")])
print.psych(stigmaFa2, cut = .39, sort = TRUE)
alpha(selfStigma[, c("C26","C27","C17","C16")])
alpha(selfStigma[, c("C9", "C12","C8","C5","C13","C11","C4","C1")])
alpha(selfStigma[, c("C22", "C3", "C28", "C15", "C19")])
alpha(selfStigma[, c("C26","C27","C17","C16")])
alpha(selfStigma[, c("C6", "C23", "C10")])
alpha(selfStigma[, c("C6", "C23", "C10")])
alpha(selfStigma[, c("C26","C27","C17","C16")])
alpha(selfStigma[, c("C6", "C23", "C10")])
alpha(selfStigma2)
stigmaFax  <- fa(selfStigma, nfactors = 1, rotate="varimax", fm = "ml")
print.psych(stigmaFax, cut = .39, sort = TRUE)
stigmaFax  <- fa(selfStigma, nfactors = 1,  fm = "ml")
stigmaFax  <- fa(selfStigma, nfactors = 2,  fm = "ml")
print.psych(stigmaFax, cut = .39, sort = TRUE)
stigmaFax  <- fa(selfStigma, nfactors = 1,  fm = "ml")
print.psych(stigmaFax, cut = .39, sort = TRUE)
selfStigmax  <- selfStigma[, c("C1", "C3", "C4", "C5", "C8", "C9", "C10", "C11", "C12", "C13", "C15", "C16", "C17", "C18","C19", "C20","C21","C22", "C23", "C25","C26", "C27","C28")]
fa(selfStigmax, nfactors = 1,  fm = "ml")
stigmaFax  <- fa(selfStigmax, nfactors = 1,  fm = "ml")
print.psych(stigmaFax, cut = .39, sort = TRUE)
alpha(selfStigmax)
stigma.clus <- ICLUST(selfStigmax)
stigma.clus <- ICLUST(selfStigmax, nclusters= 5)
stigma.clus <- ICLUST(selfStigmax, nclusters= 4)
